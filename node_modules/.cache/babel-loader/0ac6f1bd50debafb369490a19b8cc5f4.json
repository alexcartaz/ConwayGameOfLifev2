{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Lambda/Conways-Life/life/src/components/Cell.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  border: .5px solid black;\\n  width: 9px;\\n  height: 9px;\\n  background-color : \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nconst LifeCell = styled.div(_templateObject(), props => {\n  //console.log(props)\n  //const isAlive = props.isAlive ;\n  //I don't fully understand how passing values into this works\n  if (props.isAlive === true) {\n    return 'green';\n  } else {\n    return 'black';\n  }\n});\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = event => {\n      if (this.props.isRunning === false) {\n        let board = this.state.board;\n        console.log(board[this.state.id]);\n        board[this.state.id] = !board[this.state.id];\n        this.props.toggleCellUpdate(board);\n      }\n    };\n\n    this.state = {\n      currentState: props.isAlive,\n      id: props.id,\n      board: props.board\n    };\n  }\n\n  render() {\n    return React.createElement(LifeCell, {\n      isAlive: this.state.currentState,\n      onClick: event => this.handleClick(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/Users/alex/Lambda/Conways-Life/life/src/components/Cell.js"],"names":["React","Component","styled","LifeCell","div","props","isAlive","Cell","constructor","handleClick","event","isRunning","board","state","console","log","id","toggleCellUpdate","currentState","render"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAV,oBAISC,KAAK,IAAI;AAC5B;AACA;AACA;AACA,MAAGA,KAAK,CAACC,OAAN,KAAkB,IAArB,EAA0B;AACxB,WAAO,OAAP;AACD,GAFD,MAEO;AACL,WAAO,OAAP;AACD;AACF,CAbW,CAAd;;AAgBA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAE3BO,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBI,WATmB,GASLC,KAAK,IAAI;AACrB,UAAG,KAAKL,KAAL,CAAWM,SAAX,KAAyB,KAA5B,EAAkC;AAChC,YAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAAC,KAAKC,KAAL,CAAWG,EAAZ,CAAjB;AACAJ,QAAAA,KAAK,CAAC,KAAKC,KAAL,CAAWG,EAAZ,CAAL,GAAuB,CAACJ,KAAK,CAAC,KAAKC,KAAL,CAAWG,EAAZ,CAA7B;AACA,aAAKX,KAAL,CAAWY,gBAAX,CAA4BL,KAA5B;AACD;AACF,KAhBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXK,MAAAA,YAAY,EAAEb,KAAK,CAACC,OADT;AAEXU,MAAAA,EAAE,EAAEX,KAAK,CAACW,EAFC;AAGXJ,MAAAA,KAAK,EAAEP,KAAK,CAACO;AAHF,KAAb;AAKD;;AAWDO,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAI,KAAKN,KAAL,CAAWK,YAAhC;AAA8C,MAAA,OAAO,EAAER,KAAK,IAAI,KAAKD,WAAL,CAAiBC,KAAjB,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAxB0B;;AA2B7B,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst LifeCell = styled.div`\n  border: .5px solid black;\n  width: 9px;\n  height: 9px;\n  background-color : ${props => {\n    //console.log(props)\n    //const isAlive = props.isAlive ;\n    //I don't fully understand how passing values into this works\n    if(props.isAlive === true){\n      return 'green';\n    } else {\n      return 'black';\n    }\n  }};\n`;\n\nclass Cell extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentState: props.isAlive,\n      id: props.id,\n      board: props.board\n    };\n  }\n\n  handleClick = event => {\n    if(this.props.isRunning === false){\n      let board = this.state.board\n      console.log(board[this.state.id])\n      board[this.state.id] = !board[this.state.id]\n      this.props.toggleCellUpdate(board);\n    }\n  };\n\n  render() {\n    return(\n      <LifeCell isAlive = {this.state.currentState} onClick={event => this.handleClick(event)} />\n    )\n  }\n}\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}