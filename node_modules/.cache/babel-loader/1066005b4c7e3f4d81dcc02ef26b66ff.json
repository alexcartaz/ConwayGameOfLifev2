{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Lambda/Conways-Life/life/src/components/Board.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  width: 500px;\\n  height: 500px;\\n  background-color: black;\\n  margin: 0 auto;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Cell from './Cell';\nimport styled from 'styled-components';\nconst BoardContainer = styled.div(_templateObject()); //function Board ({board, isRunning, onClick}) {\n\nclass Board extends Component {\n  componentDidUpdate() {\n    console.log('component did update');\n    console.log('isRunning: ' + this.props.isRunning);\n    console.log(this.props);\n\n    if (this.props.isRunning) {\n      setTimeout(function () {\n        this.props.triggerIterate();\n      }, this.props.delay);\n    }\n  }\n\n  render() {\n    let _this$props = this.props,\n        board = _this$props.board,\n        isRunning = _this$props.isRunning,\n        onClick = _this$props.onClick,\n        toggleUpdateState = _this$props.toggleUpdateState,\n        delay = _this$props.delay;\n    console.log('*board re-render*');\n    console.log(this.props.board); //console.log('**')\n\n    return React.createElement(BoardContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, board.map((cell, index) => React.createElement(Cell, {\n      isAlive: cell,\n      id: index,\n      isRunning: isRunning,\n      onClick: onClick,\n      toggleUpdateState: toggleUpdateState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n} //I don't think mapStateToProps is necessary here since on <Cell> and <Controls> modify board\n\n/*\nconst mapStateToProps = state => ({\n  board: state.board\n});\n*/\n\n\nexport default Board;","map":{"version":3,"sources":["/Users/alex/Lambda/Conways-Life/life/src/components/Board.js"],"names":["React","Component","Cell","styled","BoardContainer","div","Board","componentDidUpdate","console","log","props","isRunning","setTimeout","triggerIterate","delay","render","board","onClick","toggleUpdateState","map","cell","index"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAV,mBAApB,C,CAUA;;AACA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAE5BM,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgB,KAAKC,KAAL,CAAWC,SAAvC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;;AACA,QAAG,KAAKA,KAAL,CAAWC,SAAd,EAAwB;AACtBC,MAAAA,UAAU,CAAC,YAAW;AACpB,aAAKF,KAAL,CAAWG,cAAX;AACD,OAFS,EAEP,KAAKH,KAAL,CAAWI,KAFJ,CAAV;AAGD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,sBACqD,KAAKL,KAD1D;AAAA,QACFM,KADE,eACFA,KADE;AAAA,QACKL,SADL,eACKA,SADL;AAAA,QACgBM,OADhB,eACgBA,OADhB;AAAA,QACyBC,iBADzB,eACyBA,iBADzB;AAAA,QAC4CJ,KAD5C,eAC4CA,KAD5C;AAEPN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWM,KAAvB,EAHO,CAIP;;AACA,WACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACT,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAED,IAAf;AAAqB,MAAA,EAAE,EAAEC,KAAzB;AAAgC,MAAA,SAAS,EAAEV,SAA3C;AAAsD,MAAA,OAAO,EAAEM,OAA/D;AAAwE,MAAA,iBAAiB,EAAEC,iBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAOD;;AAzB2B,C,CA2B9B;;AACA;;;;;;;AAKA,eAAeZ,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Cell from './Cell';\nimport styled from 'styled-components';\n\nconst BoardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 500px;\n  height: 500px;\n  background-color: black;\n  margin: 0 auto;\n  flex-wrap: wrap;\n`;\n\n//function Board ({board, isRunning, onClick}) {\nclass Board extends Component {\n  \n  componentDidUpdate() {\n    console.log('component did update')\n    console.log('isRunning: ' + this.props.isRunning)\n    console.log(this.props)\n    if(this.props.isRunning){\n      setTimeout(function() {\n        this.props.triggerIterate()\n      }, this.props.delay);\n    }\n  }\n  \n  render() {\n    let {board, isRunning, onClick, toggleUpdateState, delay} = this.props\n    console.log('*board re-render*')\n    console.log(this.props.board)\n    //console.log('**')\n    return (\n      <BoardContainer>\n        {board.map((cell, index) => (\n          <Cell isAlive={cell} id={index} isRunning={isRunning} onClick={onClick} toggleUpdateState={toggleUpdateState} />\n        ))}\n      </BoardContainer>\n    );\n  }\n}\n//I don't think mapStateToProps is necessary here since on <Cell> and <Controls> modify board\n/*\nconst mapStateToProps = state => ({\n  board: state.board\n});\n*/\nexport default Board;"]},"metadata":{},"sourceType":"module"}