{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Lambda/Conways-Life/life/src/components/Controls.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: white;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  border: .5px solid red;\\n  flex-direction: row;\\n  width: 500px;\\n  height: 100%;\\n  background-color: white;\\n  margin: 0 auto;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nconst ControlsContainer = styled.div(_templateObject());\nconst Iterate = styled.button(_templateObject2());\n\nclass Controls extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleRandomInitClick = event => {\n      if (this.props.isRunning === false) {\n        this.props.onRandomInitClick();\n      }\n    };\n\n    this.handleIterateClick = event => {\n      if (this.props.isRunning === false) {\n        this.props.onIterateClick();\n      }\n    };\n\n    this.handleClearClick = event => {\n      if (this.props.isRunning === false) {\n        this.props.onClearClick();\n      }\n    };\n\n    this.handleRunClick = event => {\n      if (this.props.isRunning === false) {\n        this.props.onRunClick();\n      }\n    };\n\n    this.handleStopClick = event => {\n      if (this.props.isRunning === false) {\n        this.props.onStopClick();\n      }\n    };\n  }\n\n  render() {\n    return (//<Iterate />\n      //// <button onClick={event => this.iterateClick(event)} >Iterate</button>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: event => this.handleRandomInitClick(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Random Init\"), React.createElement(\"button\", {\n        onClick: event => this.handleIterateClick(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Iterate\"), React.createElement(\"button\", {\n        onClick: event => this.handleClearClick(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(\"button\", {\n        onClick: event => this.handleRunClick(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Run\"), React.createElement(\"button\", {\n        onClick: event => this.handleStopClick(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Stop\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Generation: \", this.props.generation))\n      /*\n      <Start />\n      <Stop />\n      <Clear />\n      */\n\n      /*<Speed />*/\n\n    );\n  }\n\n}\n\nexport default Controls;","map":{"version":3,"sources":["/Users/alex/Lambda/Conways-Life/life/src/components/Controls.js"],"names":["React","Component","styled","ControlsContainer","div","Iterate","button","Controls","handleRandomInitClick","event","props","isRunning","onRandomInitClick","handleIterateClick","onIterateClick","handleClearClick","onClearClick","handleRunClick","onRunClick","handleStopClick","onStopClick","render","generation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,iBAAiB,GAAGD,MAAM,CAACE,GAAV,mBAAvB;AAUA,MAAMC,OAAO,GAAGH,MAAM,CAACI,MAAV,oBAAb;;AAIA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAE/BO,qBAF+B,GAEPC,KAAK,IAAI;AAC/B,UAAG,KAAKC,KAAL,CAAWC,SAAX,KAAyB,KAA5B,EAAkC;AAChC,aAAKD,KAAL,CAAWE,iBAAX;AACD;AACF,KAN8B;;AAAA,SAQ/BC,kBAR+B,GAQVJ,KAAK,IAAI;AAC5B,UAAG,KAAKC,KAAL,CAAWC,SAAX,KAAyB,KAA5B,EAAkC;AAChC,aAAKD,KAAL,CAAWI,cAAX;AACD;AACF,KAZ8B;;AAAA,SAc/BC,gBAd+B,GAcZN,KAAK,IAAI;AAC1B,UAAG,KAAKC,KAAL,CAAWC,SAAX,KAAyB,KAA5B,EAAkC;AAChC,aAAKD,KAAL,CAAWM,YAAX;AACD;AACF,KAlB8B;;AAAA,SAoB/BC,cApB+B,GAoBdR,KAAK,IAAI;AACxB,UAAG,KAAKC,KAAL,CAAWC,SAAX,KAAyB,KAA5B,EAAkC;AAChC,aAAKD,KAAL,CAAWQ,UAAX;AACD;AACF,KAxB8B;;AAAA,SA0B/BC,eA1B+B,GA0BbV,KAAK,IAAI;AACzB,UAAG,KAAKC,KAAL,CAAWC,SAAX,KAAyB,KAA5B,EAAkC;AAChC,aAAKD,KAAL,CAAWU,WAAX;AACD;AACF,KA9B8B;AAAA;;AAgC/BC,EAAAA,MAAM,GAAG;AACP,WACE;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAEZ,KAAK,IAAI,KAAKD,qBAAL,CAA2BC,KAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAQ,QAAA,OAAO,EAAEA,KAAK,IAAI,KAAKI,kBAAL,CAAwBJ,KAAxB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAQ,QAAA,OAAO,EAAEA,KAAK,IAAI,KAAKM,gBAAL,CAAsBN,KAAtB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE;AAAQ,QAAA,OAAO,EAAEA,KAAK,IAAI,KAAKQ,cAAL,CAAoBR,KAApB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE;AAAQ,QAAA,OAAO,EAAEA,KAAK,IAAI,KAAKU,eAAL,CAAqBV,KAArB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkB,KAAKC,KAAL,CAAWY,UAA7B,CANF;AAQA;;;;;;AAKA;;AAhBF;AAkBD;;AAnD8B;;AAsDjC,eAAef,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst ControlsContainer = styled.div`\n  border: .5px solid red;\n  flex-direction: row;\n  width: 500px;\n  height: 100%;\n  background-color: white;\n  margin: 0 auto;\n  flex-wrap: wrap;\n`;\n\nconst Iterate = styled.button`\n  background-color: white;\n`;\n\nclass Controls extends Component {\n \n  handleRandomInitClick = event => {\n    if(this.props.isRunning === false){\n      this.props.onRandomInitClick()\n    }\n  };\n\n  handleIterateClick = event => {\n    if(this.props.isRunning === false){\n      this.props.onIterateClick()\n    }\n  };\n\n  handleClearClick = event => {\n    if(this.props.isRunning === false){\n      this.props.onClearClick()\n    }\n  };\n\n  handleRunClick = event => {\n    if(this.props.isRunning === false){\n      this.props.onRunClick()\n    }\n  };\n\n  handleStopClick = event => {\n    if(this.props.isRunning === false){\n      this.props.onStopClick()\n    }\n  };\n\n  render() {\n    return(\n      //<Iterate />\n      //// <button onClick={event => this.iterateClick(event)} >Iterate</button>\n      <div>\n        <button onClick={event => this.handleRandomInitClick(event)} >Random Init</button>\n        <button onClick={event => this.handleIterateClick(event)} >Iterate</button>\n        <button onClick={event => this.handleClearClick(event)} >Clear</button>\n        <button onClick={event => this.handleRunClick(event)} >Run</button>\n        <button onClick={event => this.handleStopClick(event)} >Stop</button>\n        <div>Generation: {this.props.generation}</div>\n      </div>\n      /*\n      <Start />\n      <Stop />\n      <Clear />\n      */\n      /*<Speed />*/\n    );\n  }\n}\n\nexport default Controls;"]},"metadata":{},"sourceType":"module"}