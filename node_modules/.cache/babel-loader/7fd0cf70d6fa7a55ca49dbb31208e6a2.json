{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Lambda/Conways-Life/life/src/components/Board.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  width: 500px;\\n  height: 500px;\\n  background-color: black;\\n  margin: 0 auto;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Cell from './Cell';\nimport styled from 'styled-components';\nconst BoardContainer = styled.div(_templateObject()); //function Board ({board, isRunning, onClick}) {\n\nclass Board extends Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: props.board\n    }\n  }\n  */\n  render() {\n    let _this$props = this.props,\n        isRunning = _this$props.isRunning,\n        onClick = _this$props.onClick,\n        generation = _this$props.generation;\n    console.log('*board re-render*'); //console.log(this.props.board)\n    //console.log('**')\n\n    return React.createElement(BoardContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.board.map((cell, index) => React.createElement(Cell, {\n      isAlive: cell,\n      id: index,\n      isRunning: isRunning,\n      onClick: onClick,\n      generation: generation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n} //I don't think mapStateToProps is necessary here since on <Cell> and <Controls> modify board\n\n/*\nconst mapStateToProps = state => ({\n  board: state.board\n});\n*/\n\n\nexport default Board;","map":{"version":3,"sources":["/Users/alex/Lambda/Conways-Life/life/src/components/Board.js"],"names":["React","Component","Cell","styled","BoardContainer","div","Board","render","props","isRunning","onClick","generation","console","log","board","map","cell","index"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAV,mBAApB,C,CAUA;;AACA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC5B;;;;;;;;AAQAM,EAAAA,MAAM,GAAG;AAAA,sBACgC,KAAKC,KADrC;AAAA,QACFC,SADE,eACFA,SADE;AAAA,QACSC,OADT,eACSA,OADT;AAAA,QACkBC,UADlB,eACkBA,UADlB;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAFO,CAGP;AACA;;AACA,WACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KACpB,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAED,IAAf;AAAqB,MAAA,EAAE,EAAEC,KAAzB;AAAgC,MAAA,SAAS,EAAER,SAA3C;AAAsD,MAAA,OAAO,EAAEC,OAA/D;AAAwE,MAAA,UAAU,EAAEC,UAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAOD;;AArB2B,C,CAuB9B;;AACA;;;;;;;AAKA,eAAeL,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Cell from './Cell';\nimport styled from 'styled-components';\n\nconst BoardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 500px;\n  height: 500px;\n  background-color: black;\n  margin: 0 auto;\n  flex-wrap: wrap;\n`;\n\n//function Board ({board, isRunning, onClick}) {\nclass Board extends Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: props.board\n    }\n  }\n  */\n  render() {\n    let {isRunning, onClick, generation} = this.props\n    console.log('*board re-render*')\n    //console.log(this.props.board)\n    //console.log('**')\n    return (\n      <BoardContainer>\n        {this.props.board.map((cell, index) => (\n          <Cell isAlive={cell} id={index} isRunning={isRunning} onClick={onClick} generation={generation} />\n        ))}\n      </BoardContainer>\n    );\n  }\n}\n//I don't think mapStateToProps is necessary here since on <Cell> and <Controls> modify board\n/*\nconst mapStateToProps = state => ({\n  board: state.board\n});\n*/\nexport default Board;"]},"metadata":{},"sourceType":"module"}