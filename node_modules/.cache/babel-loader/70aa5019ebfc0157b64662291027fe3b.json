{"ast":null,"code":"export const START_BOARD_INIT = 'START_BOARD_INIT';\nexport const BOARD_INIT_SUCCESS = 'BOARD_INIT_SUCCESS'; //export const BOARD_INIT_FAILURE = 'BOARD_INIT_FAILURE';\n\nexport const iterateBoard = board => dispatch => {\n  console.log('start iterate');\n  dispatch({\n    type: START_BOARD_INIT\n  });\n  /*\n    init board code -- will use if reducer init state doesnt work\n     let board = []\n  let randomSeed = 0\n  //this config makes every 1 in 10 random squares in 100x100\n  for (let c = 0; c < 1000; c++){\n    randomSeed = Math.floor(Math.random() * 11);\n    if (randomSeed === 0) {\n      board[c] = 1\n    }else{\n      board[c] = 0\n    }\n  }\n  */\n\n  console.log('iterate success');\n  dispatch({\n    type: BOARD_INIT_SUCCESS,\n    payload: board\n  });\n};","map":{"version":3,"sources":["/Users/alex/Lambda/Conways-Life/life/src/actions/index.js"],"names":["START_BOARD_INIT","BOARD_INIT_SUCCESS","iterateBoard","board","dispatch","console","log","type","payload"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B,C,CACP;;AAEA,OAAO,MAAMC,YAAY,GAAGC,KAAK,IAAIC,QAAQ,IAAI;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACA;;;;;;;;;;;;;;;AAgBAK,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEN,kBAAR;AAA4BO,IAAAA,OAAO,EAAEL;AAArC,GAAD,CAAR;AACD,CArBM","sourcesContent":["export const START_BOARD_INIT = 'START_BOARD_INIT';\nexport const BOARD_INIT_SUCCESS = 'BOARD_INIT_SUCCESS';\n//export const BOARD_INIT_FAILURE = 'BOARD_INIT_FAILURE';\n\nexport const iterateBoard = board => dispatch => {\n  console.log('start iterate');\n  dispatch({ type: START_BOARD_INIT });\n  /*\n    init board code -- will use if reducer init state doesnt work\n\n    let board = []\n  let randomSeed = 0\n  //this config makes every 1 in 10 random squares in 100x100\n  for (let c = 0; c < 1000; c++){\n    randomSeed = Math.floor(Math.random() * 11);\n    if (randomSeed === 0) {\n      board[c] = 1\n    }else{\n      board[c] = 0\n    }\n  }\n  */\n  \n  console.log('iterate success');\n  dispatch({ type: BOARD_INIT_SUCCESS, payload: board });\n}"]},"metadata":{},"sourceType":"module"}