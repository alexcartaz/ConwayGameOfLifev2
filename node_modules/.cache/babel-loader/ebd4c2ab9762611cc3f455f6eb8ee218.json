{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Lambda/Conways-Life/life/src/components/Cell.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  border: .5px solid black;\\n  width: 9px;\\n  height: 9px;\\n  background-color : \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { toggleCellUpdate } from '../actions/';\nconst LifeCell = styled.div(_templateObject(), props => {\n  //I don't fully understand how passing values into this works\n  if (props.isAlive === true) {\n    return 'green';\n  } else {\n    return 'black';\n  }\n});\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {//currentState: props.isAlive,\n      //id: props.id,\n      //isRunning: props.isRunning\n    };\n  }\n  /*\n    handleClick = event => {\n      if(this.props.isRunning === false){\n        this.props.onCellClick(this.props.id)\n      }\n    };\n  */\n\n  /*\n   handler(id, onClick) {\n     return () => onClick(id);\n   };\n   */\n\n\n  render() {\n    //console.log('**')\n    console.log(this.props.onClick);\n    return (\n      /*<LifeCell id={this.props.id} isAlive={this.props.isAlive} onClick={event => this.handleClick(event)} />*/\n      //this.handler(this.props.id, this.props.onClick)\n      React.createElement(LifeCell, {\n        id: this.props.id,\n        isAlive: this.props.isAlive,\n        onClick: () => this.props.onClick(this.props.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })\n    );\n  }\n\n}\n\nexport default connect()(Cell);","map":{"version":3,"sources":["/Users/alex/Lambda/Conways-Life/life/src/components/Cell.js"],"names":["React","Component","styled","connect","toggleCellUpdate","LifeCell","div","props","isAlive","Cell","constructor","state","render","console","log","onClick","id"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,MAAMC,QAAQ,GAAGH,MAAM,CAACI,GAAV,oBAISC,KAAK,IAAI;AAC5B;AACA,MAAGA,KAAK,CAACC,OAAN,KAAkB,IAArB,EAA0B;AACxB,WAAO,OAAP;AACD,GAFD,MAEO;AACL,WAAO,OAAP;AACD;AACF,CAXW,CAAd;;AAcA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAE3BS,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKI,KAAL,GAAa,CACX;AACA;AACA;AAHW,KAAb;AAKD;AAED;;;;;;;;AAOD;;;;;;;AAMCC,EAAAA,MAAM,GAAG;AACP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWQ,OAAvB;AACA;AACE;AACA;AACA,0BAAC,QAAD;AAAU,QAAA,EAAE,EAAE,KAAKR,KAAL,CAAWS,EAAzB;AAA6B,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWC,OAAjD;AAA0D,QAAA,OAAO,EAAG,MAAM,KAAKD,KAAL,CAAWQ,OAAX,CAAmB,KAAKR,KAAL,CAAWS,EAA9B,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAKD;;AAhC0B;;AAmC7B,eAAeb,OAAO,GAEpBM,IAFoB,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { toggleCellUpdate } from '../actions/';\n\nconst LifeCell = styled.div`\n  border: .5px solid black;\n  width: 9px;\n  height: 9px;\n  background-color : ${props => {\n    //I don't fully understand how passing values into this works\n    if(props.isAlive === true){\n      return 'green';\n    } else {\n      return 'black';\n    }\n  }};\n`;\n\nclass Cell extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      //currentState: props.isAlive,\n      //id: props.id,\n      //isRunning: props.isRunning\n    };\n  }\n\n  /*\n    handleClick = event => {\n      if(this.props.isRunning === false){\n        this.props.onCellClick(this.props.id)\n      }\n    };\n  */\n /*\n  handler(id, onClick) {\n    return () => onClick(id);\n  };\n  */\n\n  render() {\n    //console.log('**')\n    console.log(this.props.onClick);\n    return(\n      /*<LifeCell id={this.props.id} isAlive={this.props.isAlive} onClick={event => this.handleClick(event)} />*/\n      //this.handler(this.props.id, this.props.onClick)\n      <LifeCell id={this.props.id} isAlive={this.props.isAlive} onClick={ () => this.props.onClick(this.props.id) } />\n    )\n  }\n}\n\nexport default connect(\n  //{ toggleCellUpdate }\n)(Cell);"]},"metadata":{},"sourceType":"module"}