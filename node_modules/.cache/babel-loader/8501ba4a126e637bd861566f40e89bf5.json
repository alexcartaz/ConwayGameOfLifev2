{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Lambda/Conways-Life/life/src/components/Controls.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: white;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  border: .5px solid red;\\n  flex-direction: row;\\n  width: 500px;\\n  height: 100%;\\n  background-color: white;\\n  margin: 0 auto;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react'; //import { iterateBoard } from '../actions/';\n\nimport styled from 'styled-components';\nconst ControlsContainer = styled.div(_templateObject());\nconst Iterate = styled.button(_templateObject2());\n\nclass Controls extends Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: props.board,\n      delay: props.delay,\n      isRunning: props.isRunning,\n      generation: props.generation\n    };\n  }\n  */\n\n  /*\n   iterateClick = event => {\n     console.log('*')\n     if(this.props.isRunning === false){\n       /*\n       this.setState(prevState => {\n         return {\n           ...prevState,\n           generation: prevState.generation+1\n         }\n       });\n       */\n  //this.props.onIterateClick(iterateGeneration(this.state.board), (this.state.generation))\n  //iterateBoard();\n  //   }\n  // };\n  render() {\n    console.log('***');\n    console.log(this.props.generation);\n    return (//<Iterate />\n      //// <button onClick={event => this.iterateClick(event)} >Iterate</button>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.props.onIterateClick(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Iterate\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Generation: \", this.props.generation))\n      /*\n      <Start />\n      <Stop />\n      <Clear />\n      */\n\n      /*<Speed />*/\n\n    );\n  }\n\n}\n\nexport default Controls;","map":{"version":3,"sources":["/Users/alex/Lambda/Conways-Life/life/src/components/Controls.js"],"names":["React","Component","styled","ControlsContainer","div","Iterate","button","Controls","render","console","log","props","generation","onIterateClick"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,iBAAiB,GAAGD,MAAM,CAACE,GAAV,mBAAvB;AAUA,MAAMC,OAAO,GAAGH,MAAM,CAACI,MAAV,oBAAb;;AAIA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/B;;;;;;;;;;;;AAWD;;;;;;;;;;;;AAYK;AACA;AACL;AACA;AAECO,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,UAAvB;AACA,WACE;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,cAAX,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkB,KAAKF,KAAL,CAAWC,UAA7B,CAFF;AAIA;;;;;;AAKA;;AAZF;AAcD;;AA9C8B;;AAiDjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react';\n//import { iterateBoard } from '../actions/';\nimport styled from 'styled-components';\n\nconst ControlsContainer = styled.div`\n  border: .5px solid red;\n  flex-direction: row;\n  width: 500px;\n  height: 100%;\n  background-color: white;\n  margin: 0 auto;\n  flex-wrap: wrap;\n`;\n\nconst Iterate = styled.button`\n  background-color: white;\n`;\n\nclass Controls extends Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: props.board,\n      delay: props.delay,\n      isRunning: props.isRunning,\n      generation: props.generation\n    };\n  }\n  */\n /*\n  iterateClick = event => {\n    console.log('*')\n    if(this.props.isRunning === false){\n      /*\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          generation: prevState.generation+1\n        }\n      });\n      */\n      //this.props.onIterateClick(iterateGeneration(this.state.board), (this.state.generation))\n      //iterateBoard();\n //   }\n // };\n\n  render() {\n    console.log('***')\n    console.log(this.props.generation)\n    return(\n      //<Iterate />\n      //// <button onClick={event => this.iterateClick(event)} >Iterate</button>\n      <div>\n        <button onClick={this.props.onIterateClick()} >Iterate</button>\n        <div>Generation: {this.props.generation}</div>\n      </div>\n      /*\n      <Start />\n      <Stop />\n      <Clear />\n      */\n      /*<Speed />*/\n    );\n  }\n}\n\nexport default Controls;"]},"metadata":{},"sourceType":"module"}