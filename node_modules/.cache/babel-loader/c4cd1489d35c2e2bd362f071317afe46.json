{"ast":null,"code":"import _objectSpread from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Lambda/Conways-Life/life/src/components/Cell.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  border: .5px solid black;\\n  width: 9px;\\n  height: 9px;\\n  border-radius: 25%;\\n  background-color : \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nconst LifeCell = styled.div(_templateObject(), props => {\n  //I don't fully understand how passing values into this works\n  if (props.isAlive === true) {\n    return 'green';\n  } else {\n    return 'black';\n  }\n}); //pure component (import pure component)\n\nclass Cell extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handler = () => {\n      if (this.props.isRunning === false) {\n        this.setState(prevState => {\n          return _objectSpread({}, prevState, {\n            isAlive: !prevState.isAlive,\n            isAliveProp: prevState.isAlive\n          });\n        });\n        this.props.onClick(this.props.id);\n      }\n    };\n\n    this.state = {\n      isAlive: props.isAlive,\n      isAliveProp: props.isAlive\n    };\n  } //this is called before rendering.\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isAlive !== prevState.isAliveProp) {\n      return {\n        isAlive: nextProps.isAlive,\n        isAliveProp: nextProps.isAlive\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    //console.log(this.props.id)\n    return React.createElement(LifeCell, {\n      id: this.props.id,\n      isAlive: this.state.isAlive,\n      onClick: this.handler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\nexport default Cell;","map":{"version":3,"sources":["/Users/alex/Lambda/Conways-Life/life/src/components/Cell.js"],"names":["React","PureComponent","styled","connect","LifeCell","div","props","isAlive","Cell","constructor","handler","isRunning","setState","prevState","isAliveProp","onClick","id","state","getDerivedStateFromProps","nextProps","render"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,QAAQ,GAAGF,MAAM,CAACG,GAAV,oBAKSC,KAAK,IAAI;AAC5B;AACA,MAAGA,KAAK,CAACC,OAAN,KAAkB,IAArB,EAA0B;AACxB,WAAO,OAAP;AACD,GAFD,MAEO;AACL,WAAO,OAAP;AACD;AACF,CAZW,CAAd,C,CAcA;;AACA,MAAMC,IAAN,SAAmBP,aAAnB,CAAiC;AAE/BQ,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBI,OAnBmB,GAmBT,MAAM;AACd,UAAG,KAAKJ,KAAL,CAAWK,SAAX,KAAyB,KAA5B,EAAkC;AAChC,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,mCACKA,SADL;AAEEN,YAAAA,OAAO,EAAE,CAACM,SAAS,CAACN,OAFtB;AAGEO,YAAAA,WAAW,EAAED,SAAS,CAACN;AAHzB;AAKD,SAND;AAOA,aAAKD,KAAL,CAAWS,OAAX,CAAmB,KAAKT,KAAL,CAAWU,EAA9B;AACD;AACF,KA9BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXV,MAAAA,OAAO,EAAED,KAAK,CAACC,OADJ;AAEXO,MAAAA,WAAW,EAAER,KAAK,CAACC;AAFR,KAAb;AAID,GAR8B,CAU/B;;;AACA,SAAOW,wBAAP,CAAgCC,SAAhC,EAA2CN,SAA3C,EAAsD;AACpD,QAAIM,SAAS,CAACZ,OAAV,KAAsBM,SAAS,CAACC,WAApC,EAAgD;AAC9C,aAAO;AACLP,QAAAA,OAAO,EAAEY,SAAS,CAACZ,OADd;AAELO,QAAAA,WAAW,EAAEK,SAAS,CAACZ;AAFlB,OAAP;AAID;;AACD,WAAO,IAAP;AACD;;AAeDa,EAAAA,MAAM,GAAG;AACP;AACA,WACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,KAAKd,KAAL,CAAWU,EAAzB;AAA6B,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWV,OAAjD;AAA0D,MAAA,OAAO,EAAE,KAAKG,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAvC8B;;AAwChC;AAED,eAAeF,IAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nconst LifeCell = styled.div`\n  border: .5px solid black;\n  width: 9px;\n  height: 9px;\n  border-radius: 25%;\n  background-color : ${props => {\n    //I don't fully understand how passing values into this works\n    if(props.isAlive === true){\n      return 'green';\n    } else {\n      return 'black';\n    }\n  }};\n`;\n//pure component (import pure component)\nclass Cell extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAlive: props.isAlive,\n      isAliveProp: props.isAlive\n    };\n  }\n\n  //this is called before rendering.\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isAlive !== prevState.isAliveProp){\n      return {\n        isAlive: nextProps.isAlive,\n        isAliveProp: nextProps.isAlive\n      }\n    }\n    return null\n  }\n  \n  handler = () => {\n    if(this.props.isRunning === false){\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          isAlive: !prevState.isAlive,\n          isAliveProp: prevState.isAlive\n        }\n      });\n      this.props.onClick(this.props.id)\n    }\n  };\n\n  render() {\n    //console.log(this.props.id)\n    return(\n      <LifeCell id={this.props.id} isAlive={this.state.isAlive} onClick={this.handler}  />\n    )\n  }\n};\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}