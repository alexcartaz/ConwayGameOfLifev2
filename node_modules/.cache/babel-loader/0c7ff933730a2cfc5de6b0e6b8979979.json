{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Lambda/Conways-Life/life/src/components/Controls.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: white;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  border: .5px solid red;\\n  flex-direction: row;\\n  width: 500px;\\n  height: 100%;\\n  background-color: white;\\n  margin: 0 auto;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nconst ControlsContainer = styled.div(_templateObject());\nconst Iterate = styled.button(_templateObject2());\n\nclass Controls extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleIterateClick = event => {\n      if (this.props.isRunning === false) {\n        this.props.onIterateClick();\n      }\n    };\n\n    this.handleClearClick = event => {\n      if (this.props.isRunning === false) {\n        this.props.onClearClick();\n      }\n    };\n  }\n\n  render() {\n    return (//<Iterate />\n      //// <button onClick={event => this.iterateClick(event)} >Iterate</button>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: event => this.handleIterateClick(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Iterate\"), React.createElement(\"button\", {\n        onClick: event => this.handleClearClick(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Generation: \", this.props.generation))\n      /*\n      <Start />\n      <Stop />\n      <Clear />\n      */\n\n      /*<Speed />*/\n\n    );\n  }\n\n}\n\nexport default Controls;","map":{"version":3,"sources":["/Users/alex/Lambda/Conways-Life/life/src/components/Controls.js"],"names":["React","Component","styled","ControlsContainer","div","Iterate","button","Controls","handleIterateClick","event","props","isRunning","onIterateClick","handleClearClick","onClearClick","render","generation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,iBAAiB,GAAGD,MAAM,CAACE,GAAV,mBAAvB;AAUA,MAAMC,OAAO,GAAGH,MAAM,CAACI,MAAV,oBAAb;;AAIA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SA6B/BO,kBA7B+B,GA6BVC,KAAK,IAAI;AAC5B,UAAG,KAAKC,KAAL,CAAWC,SAAX,KAAyB,KAA5B,EAAkC;AAChC,aAAKD,KAAL,CAAWE,cAAX;AACD;AACF,KAjC8B;;AAAA,SAmC/BC,gBAnC+B,GAmCZJ,KAAK,IAAI;AAC1B,UAAG,KAAKC,KAAL,CAAWC,SAAX,KAAyB,KAA5B,EAAkC;AAChC,aAAKD,KAAL,CAAWI,YAAX;AACD;AACF,KAvC8B;AAAA;;AAyC/BC,EAAAA,MAAM,GAAG;AACP,WACE;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAEN,KAAK,IAAI,KAAKD,kBAAL,CAAwBC,KAAxB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAQ,QAAA,OAAO,EAAEA,KAAK,IAAI,KAAKI,gBAAL,CAAsBJ,KAAtB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkB,KAAKC,KAAL,CAAWM,UAA7B,CAHF;AAKA;;;;;;AAKA;;AAbF;AAeD;;AAzD8B;;AA4DjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst ControlsContainer = styled.div`\n  border: .5px solid red;\n  flex-direction: row;\n  width: 500px;\n  height: 100%;\n  background-color: white;\n  margin: 0 auto;\n  flex-wrap: wrap;\n`;\n\nconst Iterate = styled.button`\n  background-color: white;\n`;\n\nclass Controls extends Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: props.board,\n      delay: props.delay,\n      isRunning: props.isRunning,\n      generation: props.generation\n    };\n  }\n  */\n /*\n  iterateClick = event => {\n    console.log('*')\n    if(this.props.isRunning === false){\n      /*\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          generation: prevState.generation+1\n        }\n      });\n      */\n      //this.props.onIterateClick(iterateGeneration(this.state.board), (this.state.generation))\n      //iterateBoard();\n //   }\n // };\n\n  handleIterateClick = event => {\n    if(this.props.isRunning === false){\n      this.props.onIterateClick()\n    }\n  };\n\n  handleClearClick = event => {\n    if(this.props.isRunning === false){\n      this.props.onClearClick()\n    }\n  };\n\n  render() {\n    return(\n      //<Iterate />\n      //// <button onClick={event => this.iterateClick(event)} >Iterate</button>\n      <div>\n        <button onClick={event => this.handleIterateClick(event)} >Iterate</button>\n        <button onClick={event => this.handleClearClick(event)} >Clear</button>\n        <div>Generation: {this.props.generation}</div>\n      </div>\n      /*\n      <Start />\n      <Stop />\n      <Clear />\n      */\n      /*<Speed />*/\n    );\n  }\n}\n\nexport default Controls;"]},"metadata":{},"sourceType":"module"}