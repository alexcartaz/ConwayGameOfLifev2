{"ast":null,"code":"import _objectSpread from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"/Users/alex/Lambda/Conways-Life/life/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/alex/Lambda/Conways-Life/life/src/components/Cell.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  border: .5px solid black;\\n  width: 9px;\\n  height: 9px;\\n  border-radius: 25%;\\n  background-color : \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nconst LifeCell = styled.div(_templateObject(), state => {\n  //I don't fully understand how passing values into this works\n  if (state.isAlive === true) {\n    return 'green';\n  } else {\n    return 'black';\n  }\n}); //pure component (import pure component)\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handler = () => {\n      if (this.props.isRunning === false) {\n        this.setState(prevState => {\n          return _objectSpread({}, prevState, {\n            isAlive: !prevState.isAlive\n          });\n        });\n        this.props.onClick(this.props.id);\n      }\n    };\n\n    this.state = {\n      isAlive: props.isAlive,\n      isAliveProp: props.isAlive\n    };\n  }\n  /*\n  //this is called before rendering.\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isAlive !== prevState.isAliveProp){\n      return {\n        isAlive: nextProps.isAlive,\n        isAliveProp: nextProps.isAlive\n      }\n    }\n    return null\n  }\n  */\n\n\n  render() {\n    console.log(this.props.id);\n    console.log('state.isAlve: ' + this.state.isAlive);\n    console.log('props.isAlve: ' + this.props.isAlive);\n    return React.createElement(LifeCell, {\n      id: this.props.id,\n      isAlive: this.props.isAlive,\n      onClick: this.handler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\nexport default Cell;","map":{"version":3,"sources":["/Users/alex/Lambda/Conways-Life/life/src/components/Cell.js"],"names":["React","Component","styled","LifeCell","div","state","isAlive","Cell","constructor","props","handler","isRunning","setState","prevState","onClick","id","isAliveProp","render","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAV,oBAKSC,KAAK,IAAI;AAC5B;AACA,MAAGA,KAAK,CAACC,OAAN,KAAkB,IAArB,EAA0B;AACxB,WAAO,OAAP;AACD,GAFD,MAEO;AACL,WAAO,OAAP;AACD;AACF,CAZW,CAAd,C,CAcA;;AACA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAE3BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,OAnBmB,GAmBT,MAAM;AACd,UAAG,KAAKD,KAAL,CAAWE,SAAX,KAAyB,KAA5B,EAAkC;AAChC,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,mCACKA,SADL;AAEEP,YAAAA,OAAO,EAAE,CAACO,SAAS,CAACP;AAFtB;AAID,SALD;AAMA,aAAKG,KAAL,CAAWK,OAAX,CAAmB,KAAKL,KAAL,CAAWM,EAA9B;AACD;AACF,KA7BkB;;AAEjB,SAAKV,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OADJ;AAEXU,MAAAA,WAAW,EAAEP,KAAK,CAACH;AAFR,KAAb;AAID;AACD;;;;;;;;;;;;;;AAwBAW,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWM,EAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB,KAAKd,KAAL,CAAWC,OAA1C;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB,KAAKV,KAAL,CAAWH,OAA1C;AACA,WACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,KAAKG,KAAL,CAAWM,EAAzB;AAA6B,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWH,OAAjD;AAA0D,MAAA,OAAO,EAAE,KAAKI,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAxC0B;;AAyC5B;AAED,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst LifeCell = styled.div`\n  border: .5px solid black;\n  width: 9px;\n  height: 9px;\n  border-radius: 25%;\n  background-color : ${state => {\n    //I don't fully understand how passing values into this works\n    if(state.isAlive === true){\n      return 'green';\n    } else {\n      return 'black';\n    }\n  }};\n`;\n//pure component (import pure component)\nclass Cell extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAlive: props.isAlive,\n      isAliveProp: props.isAlive\n    };\n  }\n  /*\n  //this is called before rendering.\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isAlive !== prevState.isAliveProp){\n      return {\n        isAlive: nextProps.isAlive,\n        isAliveProp: nextProps.isAlive\n      }\n    }\n    return null\n  }\n  */\n  handler = () => {\n    if(this.props.isRunning === false){\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          isAlive: !prevState.isAlive\n        }\n      });\n      this.props.onClick(this.props.id)\n    }\n  };\n\n  render() {\n    console.log(this.props.id)\n    console.log('state.isAlve: ' + this.state.isAlive)\n    console.log('props.isAlve: ' + this.props.isAlive)\n    return(\n      <LifeCell id={this.props.id} isAlive={this.props.isAlive} onClick={this.handler}  />\n    )\n  }\n};\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}